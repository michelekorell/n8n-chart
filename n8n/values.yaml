# Default values for n8n.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: n8nio/n8n
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""  # Defaults to appVersion in Chart.yaml

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 5678

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 2000m
    memory: 4096Mi
  requests:
    cpu: 500m
    memory: 512Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 20Gi

n8n:
  encryption:
    key: ""  # Required: Your encryption key for n8n
  basicAuth:
    enabled: false
    user: ""
    password: ""
  database:
    type: sqlite  # Can be "sqlite", "postgresdb", or "mysqldb"
    postgresdb:
      host: ""
      port: 5432
      database: n8n
      user: n8n
      password: ""
    mysqldb:
      host: ""
      port: 3306
      database: n8n
      user: n8n
      password: ""
  smtp:
    enabled: false
    host: ""
    port: 587
    user: ""
    password: ""
    sender: ""
    ssl: false
  # New configuration options for n8n 1.24.0
  webhook:
    enabled: true
    timeout: 10000
  execution:
    timeout: 3600
    maxTimeout: 7200
  generic:
    timezone: UTC
    dateFormat: "YYYY-MM-DD"
    timeFormat: "HH:mm:ss"
  security:
    excludeEndpoints: ""
    basicAuth:
      active: false
      user: ""
      password: ""
  nodes:
    exclude: ""
    include: ""
  telemetry:
    enabled: false
  logs:
    level: info
    output: console
  editor:
    baseUrl: ""
  workflow:
    tags:
      disabled: false
    callPolicy:
      enabled: false
      allowedDomains: ""
    sharing:
      enabled: true
    history:
      pruned: false
      maxAge: 24
    defaultSettings:
      saveExecutionData: true
      saveManualExecutions: true
      saveDataErrorExecution: "all"
      saveDataSuccessExecution: "all"
      executionTimeout: 3600
      timezone: UTC
      saveDataErrorExecutionAll: false
      saveDataSuccessExecutionAll: false
  # New settings for n8n 1.82.3
  binaryData:
    maxSize: 10485760  # 10MB in bytes
    ttl: 3600  # 1 hour in seconds
  queue:
    bull:
      redis:
        host: ""
        port: 6379
        password: ""
        db: 0
      prefix: "n8n"
      defaultJobOptions:
        attempts: 3
        backoff:
          type: "exponential"
          delay: 1000
  rateLimit:
    max: 60
    windowMs: 60000
  security:
    excludeEndpoints: ""
    basicAuth:
      active: false
      user: ""
      password: ""
    jwt:
      secret: ""
      expiresIn: "7d"
    ldap:
      enabled: false
      url: ""
      bindDn: ""
      bindCredentials: ""
      searchBase: ""
      searchFilter: ""
      groupSearchBase: ""
      groupSearchFilter: ""
    saml:
      enabled: false
      entryPoint: ""
      issuer: ""
      cert: ""
      key: ""
      callbackUrl: ""
      wantAssertionsSigned: true
      wantResponseSigned: true
      wantAuthnResponseSigned: true
      signatureValidationType: "sha256"
      allowedClockDrift: 0
      identifierFormat: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
      authnRequestBinding: "HTTP-POST"
      logoutRequestBinding: "HTTP-Redirect"
      logoutResponseBinding: "HTTP-POST"
      skipRequestCompression: false
      acceptedClockSkewMs: 0
      disableRequestedAuthnContext: false
      scoping:
        allowIdpInitiated: false
