questions:
  - variable: n8nVersion.selection
    label: "Version Selection"
    description: "Choose between stable version or specific version"
    type: enum
    options:
      - "stable"
      - "specific"
    default: "stable"
    required: true
  
  - variable: image.tag
    label: "n8n Version"
    description: "Select the specific n8n version to deploy"
    type: enum
    options:
      - "1.105.3"
      - "1.85.4"
      - "1.84.3"
      - "1.83.2"
      - "1.82.3"
      - "latest"
    default: "1.105.3"
    show_if: "n8nVersion.selection=specific"
    required: true



  
  - variable: n8n.database.postgresdb.user
    label: "PostgreSQL Username"
    description: "PostgreSQL database username"
    type: string
    default: "n8n"
    show_if: "n8n.database.type=postgresdb"
  
  - variable: n8n.database.postgresdb.password
    label: "PostgreSQL Password"
    description: "PostgreSQL database password"
    type: password
    show_if: "n8n.database.type=postgresdb"
  
  - variable: replicaCount
    label: "Replica Count"
    description: "Number of n8n replicas to deploy"
    type: int
    default: 1
    min: 1
    max: 10
  
  - variable: resources.requests.cpu
    label: "CPU Request"
    description: "CPU request for n8n pods"
    type: string
    default: "500m"
  
  - variable: resources.requests.memory
    label: "Memory Request"
    description: "Memory request for n8n pods"
    type: string
    default: "512Mi"
  
  - variable: resources.limits.cpu
    label: "CPU Limit"
    description: "CPU limit for n8n pods"
    type: string
    default: "1000m"
  
  - variable: resources.limits.memory
    label: "Memory Limit"
    description: "Memory limit for n8n pods"
    type: string
    default: "4096Mi"
  
  - variable: ingress.enabled
    label: "Enable Ingress"
    description: "Enable ingress for external access"
    type: boolean
    default: true
  
  - variable: ingress.domainName
    label: "Domain Name"
    description: "Domain name for n8n access"
    type: string
    default: "n8n.local"
    show_if: "ingress.enabled=true"
  
  - variable: service.type
    label: "Service Type"
    description: "Kubernetes service type"
    type: enum
    options:
      - "ClusterIP"
      - "NodePort"
      - "LoadBalancer"
    default: "LoadBalancer"
